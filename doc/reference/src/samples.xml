<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="samples">
  <title>Sample Applications</title>

  <para>The Spring GemFire project includes one sample application. Named
  "Hello World", the sample demonstrates how to configure and use GemFire
  inside a Spring application. At runtime, the sample offers a
  <emphasis>shell</emphasis> to the user for running various commands against
  the grid. It provides an excellent starting point for users unfamiliar with
  the essential components or the Spring and GemFire concepts.</para>

  <para>The sample is bundled with the distribution and is included in the
  main solution file. You can also run it from the command line once it is
  built in visual studio.</para>

  <section>
    <title>Prerequisites</title>

    <para>You will need to <ulink
    url="http://download.gemstone.com/">download</ulink> and install </para>

    <itemizedlist>
      <listitem>
        <para>GemFire Enterprise 6.0 </para>
      </listitem>
    </itemizedlist>

    <para>The .NET clients run in a client-server architecture. This is shown
    below from the perspective of a single 'native (C++ or .NET) client and a
    single cache server process. </para>

    <figure>
      <title>Client-Server Configuration for native (C++ or .NET)
      clients</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/cache-server.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para> This requires that you run the cacheserver.bat file located in the
    'bin' of the GemFire Enterprise 6.0 product. The spring gemfire project
    ships with the essential GemFire client side libraries to run the sample
    application. However, it is recommended that you download the GemFire
    Enterprise Native Client 3.0.0.9 from the download site to have access to
    reference documentation. You may also find the <ulink
    url="http://community.gemstone.com/display/gemfire/GemFire+.NET+API+Tour">GemFire
    .NET API Tour</ulink> of interest to read.</para>
  </section>

  <section id="samples:hello-world">
    <title>Hello World</title>

    <para>The Hello World sample demonstrates the core functionality of the
    Spring GemFire project. It bootstraps GemFire, configures it, executes
    arbitrary commands against it and shuts it down when the application
    exits. Multiple instances can be started at the same time as they will
    work with each other sharing data without any user intervention.</para>

    <section id="samples:hello-world:start-stop">
      <title>Starting and stopping the sample</title>

      <para>Hello World is designed as a stand-alone application. The main
      class is in the file <literal>Program.cs</literal> and generates an
      executable named Spring.Data.GemFire.HelloWorld.exe.</para>

      <para>To comple the example, load the solution Spring.Data.GemFire.sln
      in the root of the Spring Gemfire project directory. </para>

      <para>The file cache.xml should be copied into the GemFire Enterprise
      6.0 'bin' directory where the cacheserver.bat fle is located. The
      cacheserver.bat file should then be executed to start the cacheserver
      process.</para>

      <para>To stop the sample, simply type <literal>exit</literal> at the
      command line or press <literal>Ctrl+C</literal> to stop the VM and
      shutdown the Spring container.</para>
    </section>

    <section id="samples:hello-world:run">
      <title>Using the sample</title>

      <para>Once started, the sample will create a shared data grid and allow
      the user to issue commands against it. The output will likely look as
      follows:</para>

      <programlisting>INFO: Created GemFire Cache [Spring GemFire World] v. X.Y.Z
INFO: Created new cache region [myWorld]
INFO: Member xxxxxx:50694/51611 connecting to region [myWorld]
Hello World!
Want to interact with the world ? ...
Supported commands are:

get &lt;key&gt; - retrieves an entry (by key) from the grid
put &lt;key&gt; &lt;value&gt; - puts a new entry into the grid
remove &lt;key&gt; - removes an entry (by key) from the grid
...</programlisting>

      <para>For example to add new items to the grid one can use:</para>

      <programlisting>-&gt; <emphasis role="bold">put 1 unu</emphasis>
INFO: Added [1=unu] to the cache
null
-&gt; <emphasis role="bold">put 1 one</emphasis>
INFO: Updated [1] from [unu] to [one]
unu
-&gt; <emphasis role="bold">size</emphasis>
1
-&gt; <emphasis role="bold">put 2 two</emphasis>
INFO: Added [2=two] to the cache
null
-&gt; <emphasis role="bold">size</emphasis>
2</programlisting>

      <para>Multiple instances can be created at the same time. Once started,
      the new VMs automatically see the existing region and its
      information:</para>

      <programlisting>INFO: Connected to Distributed System ['Spring GemFire World'=xxxx:56218/49320@yyyyy]
Hello World!
...

-&gt; <emphasis role="bold">size</emphasis>
2
-&gt; <emphasis role="bold">map</emphasis>
[2=two] [1=one]
-&gt; <emphasis role="bold">query length = 3</emphasis>
[one, two]
</programlisting>

      <para>Experiment with the example, start (and stop) as many instances as
      you want, run various commands in one instance and see how the others
      react. To preserve data, at least one instance needs to be alive all
      times - if all instances are shutdown, the grid data is completely
      destroyed (in this example - to preserve data between runs, see the
      GemFire documentations).</para>
    </section>

    <section id="samples:hello-world:explained">
      <title>Hello World Sample Explained</title>

      <para>Hello World uses both Spring XML and annotations for its
      configuration. The initial boostrapping configuration is
      <literal>app-context.xml</literal> which includes the cache
      configuration, defined under <literal>cache-context.xml</literal> file
      and performs classpath <ulink
      url="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/beans.html#beans-classpath-scanning">scanning</ulink>
      for Spring <ulink
      url="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/beans.html#beans-factorybeans-annotations">components</ulink>.
      The cache configuration defines the GemFire cache, region and for
      illustrative purposes a simple cache listener that acts as a
      logger.</para>

      <para>The main <emphasis>beans</emphasis> are
      <literal>HelloWorld</literal> and <literal>CommandProcessor</literal>
      which rely on the <classname>GemfireTemplate</classname> to interact
      with the distributed fabric. Both classes use annotations to define
      their dependency and life-cycle callbacks.</para>
    </section>
  </section>
</chapter>
